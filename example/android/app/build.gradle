def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'apm-plugin'

ApmPlugin {
    // 是否进行插桩
    enable true
    // 是否在Debug包插桩，默认不插桩
    enableInDebug true
    // 启动分析开关：监控App启动耗时，需要同时开启pageLoadSwitch
    startSwitch = true
    // 页面响应开关：监控Activity的生命周期耗时
    pageLoadSwitch = true
    // 网络监控开关：监控okhttp3的网络请求
    okHttp3Switch = true
    // 白名单下的包进行插桩，需要填写要插装类所在的包名，支持前缀配置
//    whiteList = ["com"]
    // 黑名单包下类不进行插桩，可以配置包名和类名，没有可以填空
//    blackList = ["com.xxx"]

}

android {
    compileSdkVersion flutter.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.idreamsky.volcengine_native_example"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies{
    implementation 'com.volcengine:apm_insight:1.4.9.cn-rc.5'
    implementation 'com.volcengine:apm_insight_crash:1.4.6-rc.14'
}